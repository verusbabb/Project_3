{"version":3,"sources":["components/Welcome/index.js","pages/Home.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Card/index.js","components/DeleteBtn/DeleteBtn.js","components/Jumbotron/index.js","components/List/index.js","utils/API.js","utils/userContext.js","components/Table/Table.js","components/Table/TableBody.js","components/Table/TableHead.js","pages/Dashboard.js","components/Form/index.js","components/Collections/index.js","pages/Expenses.js","pages/Schedule.js","pages/Trip.js","pages/CreateTrip.js","pages/Signup.js","pages/Login.js","pages/Signout.js","components/Nav/index.js","components/Footer/index.js","components/protectedRoutes.js","App.js","index.js"],"names":["index","className","to","Home","Welcome","Col","size","children","split","map","join","Container","props","Row","Card","DeleteBtn","role","tabIndex","Jumbotron","style","clear","padding","textAlign","List","API","getUsers","axios","get","getUser","id","getUserByUsername","username","deleteUser","delete","saveUser","userData","post","saveTrip","tripData","findOneUser","userName","password","signOut","console","log","getTrips","getTrip","findTripByTripId","tripId","updateTrip","put","members","editTrip","deleteTrip","createExpense","expenseData","deleteExpense","createSchedule","scheduleData","deleteSchedule","createCollection","collectionData","createCollectionItem","deleteCollection","UserContext","createContext","firstName","lastName","isAuthenticated","memberOf","Provider","reducer","state","action","type","localStorage","setItem","JSON","stringify","filter","_","updateData","user","parse","getItem","UserProvider","value","useReducer","dispatch","useUserContext","useContext","Table","TableBody","TableHead","Dashboard","useState","setUser","currentTrip","setCurrentTrip","weather","setWeather","setSched","getWeather","location","fetch","process","then","res","json","weatherData","message","catch","err","sortSched","unsortedSchedule","sortedSchedule","sort","a","b","moment","activityDate","startTime","valueOf","loadTrips","data","i","length","startDate","endDate","tripStart","Date","tripEnd","now","tripCity","tripSchedule","useEffect","_id","src","icon","alt","description","main","temp","toFixed","feels_like","humidity","tripName","schedule","activityName","trip","actions","flat","modal","node","waves","onClick","bottomSheet","fixedFooter","header","open","options","dismissible","endingTop","inDuration","opacity","outDuration","preventScrolling","startingTop","trigger","Input","TextArea","rows","FormBtn","float","marginBottom","Collections","collection","setCollection","formObject","setFormObject","useParams","loadTrip","tripCollections","handleInputChange","event","target","name","handleFormClear","document","getElementById","reset","collectionName","collectionDescription","itemName","itemUrl","itemDescription","preventDefault","onChange","placeholder","accordion","collect","expanded","collectionId","itemSubmitter","container","collectionItems","item","href","rel","class","categoryId","Expenses","tripExpense","setTripExpense","tripExpenses","expenseAmount","expenseDescription","expenseSubmitter","expenseDate","autoclose","autoClose","expense","expenseId","Schedule","sched","activitySubmitter","endTime","activityDescription","scheduleId","Trip","setTrip","success","fail","handleEditInput","fluid","tripState","friend","CreateTrip","setSuccess","setFail","history","useHistory","disabled","push","Math","random","toString","substr","toUpperCase","Signup","setTimeout","window","Login","Signout","Nav","alignLinks","brand","navLinks","link","logged","linkTo","linkName","Footer","ProtectedRoute","Component","component","rest","render","pathname","from","App","time","logout","alert","removeItem","resetTimer","clearTimeout","onload","onmousemove","onkeydown","inactivityTime","exact","path","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.24ed8a64.chunk.js","sourcesContent":["import \"./style.css\"\nimport { Link } from \"react-router-dom\";\n\nfunction index() {\n\n    // document.getElementById(\"brand-logo\").hide();\n\n    return (\n        <div className=\"container valign-wrapper\">\n            <div className=\"row valign\">\n                <div className=\"col l12 m12 s12 center\">\n                    <div className=\"card-panel transparentBG no-shadows \">\n                    <h1 className=\"black-text large-welcome\">Welcome to TRVLR</h1>\n                    <h1 className=\"mobile-welcome center-align\">T R V L R</h1>\n                    </div>\n                </div>\n                <div className=\"col l12 s12 center\">\n                    <div className=\"card-panel transparentBG no-shadows mobile-action\">\n                    <h5 className=\"black-text\">Plan your next trip with your friends - all in one place.</h5>\n                    </div>\n                </div>\n                <div className=\"center\">\n                    <Link to=\"/login\" className=\"roundedbtn btn-small white-text bigger-text\">Log In</Link>\n                    <br></br>\n                    <Link to= \"/signup\" className=\"roundedTransparent btn-small transparentBG no-shadows\">Sign Up</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default index\n","import Welcome from \"../components/Welcome\";\n\nfunction Home() {\n    return (\n        \n            <Welcome />\n        \n    )\n}\n\nexport default Home","import React from \"react\";\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"m12\"> instead of <div className=\"col m12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col \" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container(props) {\n  return <div className={`container`}>{props.children}</div>;\n}\n","import React from \"react\";\n\n// This Row component lets us use a materialize row without having to think about class names\nexport function Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n","import { Container } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Card(props) {\n    return (\n        <>\n            <Container>\n                <div className=\"card  no-shadows center-align\">\n                    <div className=\"card-content\">\n                        {props.children}\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport \"./DeleteBtn.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <div className=\"delete-btn \" {...props} role=\"button\" tabIndex=\"0\">\n      <i className=\"material-icons\">clear</i>\n    </div>\n    \n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{clear: \"both\", padding: \"1vh\", textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import axios from \"axios\";\n// const passport = require(\"../config/passport\");\n\nconst API = {\n  //USER ROUTES\n\n  // Gets all users\n  getUsers: function () {\n    return axios.get(\"/api/users\");\n  },\n  // Gets the user with the given id\n  getUser: function (id) {\n    return axios.get(\"/api/users/\" + id);\n  },\n  getUserByUsername: function (username) {\n    return axios.get(\"/api/username/\" + username);\n  },\n  // Deletes the user with the given id\n  deleteUser: function (id) {\n    return axios.delete(\"/api/users/\" + id);\n  },\n  // UPDATED saveUser route that now includes authentication\n  saveUser: function (userData) {\n    return axios.post(\"/api/users/signup\", userData);\n  },\n  // Saves a trip to the database\n  saveTrip: function (tripData) {\n    return axios.post(\"/api/trips/\", tripData);\n  },\n\n  findOneUser: function (userData) {\n    return axios.post(\"/api/users/login\", {\n      username: userData.userName,\n      password: userData.password,\n    });\n  },\n\n  signOut: function () {\n    console.log(\"signing out\");\n    return axios.get(\"/api/users/signout\");\n  },\n\n  //TRIP ROUTES\n\n  // Gets all trips\n  getTrips: function () {\n    return axios.get(\"/api/trips\");\n  },\n  // Gets the trip with the given id\n  getTrip: function (id) {\n    return axios.get(\"/api/trips/\" + id);\n  },\n  findTripByTripId: function (tripId) {\n    return axios.get(\"/api/trips/tripId/\" + tripId.tripId);\n  },\n  updateTrip: function (id, tripData) {\n    return axios.put(\"/api/trips/\" + id, {\n      members: tripData.members,\n    });\n  },\n  editTrip: function (id, tripData) {\n    return axios.put(\"/api/trips/editTrip/\" + id, tripData)\n  },\n  // Deletes the trip with the given id\n  deleteTrip: function (id) {\n    return axios.delete(\"/api/trips/\" + id);\n  },\n\n  createExpense: function (id, expenseData) {\n    return axios.post(`/api/trips/${id}`, expenseData);\n  },\n\n  deleteExpense: function (id) {\n    return axios.delete(\"/api/trips/expenses/\" + id);\n  },\n\n  createSchedule: function (id, scheduleData) {\n    return axios.post(`/api/trips/schedule/${id}`, scheduleData);\n  },\n\n  deleteSchedule: function (id) {\n    return axios.delete(\"/api/trips/schedule/\" + id);\n  },\n\n  createCollection: function (id, collectionData) {\n    return axios.post(`/api/trips/collection/${id}`, collectionData);\n  },\n\n  createCollectionItem: function (id, collectionData) {\n    return axios.put(`/api/trips/collection/${id}`, collectionData);\n  },\n\n  deleteCollection: function (id) {\n    return axios.delete(\"/api/trips/collection/\" + id);\n  },\n};\n\nexport default API;\n","import React, { createContext, useReducer, useContext } from \"react\";\n\nconst UserContext = createContext({\n  id: \"\",\n  userName: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  isAuthenticated: \"false\",\n  memberOf: [],\n});\nconst { Provider } = UserContext;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"add\":\n      const userData = {\n        ...state,\n        id: action.id,\n        userName: action.userName,\n        firstName: action.firstName,\n        lastName: action.lastName,\n        memberOf: action.memberOf,\n        isAuthenticated: action.isAuthenticated,\n      };\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      return userData;\n    case \"remove\":\n      return state.filter((_, index) => {\n        return index !== action.index;\n      });\n    case \"update\":\n      const updateData = { ...state, memberOf: action.memberOf };\n      localStorage.setItem(\"user\", JSON.stringify(updateData));\n      return { ...state, memberOf: action.memberOf };\n\n    case \"timeOut\":\n      return {\n        ...state,\n        userName: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        memberOf: [],\n        isAuthenticated: \"false\",\n      };\n\n    default:\n      return state;\n  }\n}\nconst user = JSON.parse(localStorage.getItem(\"user\"))\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : [];\n\nfunction UserProvider({ value = {}, ...props }) {\n  const [state, dispatch] = useReducer(reducer, user);\n\n  return <Provider value={{ state, dispatch }} {...props} />;\n}\n\nfunction useUserContext() {\n  return useContext(UserContext);\n}\n\nexport { UserProvider, useUserContext };\n","import { Container } from \"../Grid\";\nimport React from \"react\";\n\n\nexport function Table(props) {\n    return (\n        <>\n          <Container>\n                <table>\n                    {props.children}\n                </table>\n          </Container>\n        </>\n\n    )\n}","import React from \"react\";\n\nexport function TableBody(props) {\n    return <>\n        <tbody>\n            {props.children}\n        </tbody>\n    </>\n}","import React from \"react\";\n\nexport function TableHead(props) {\n    return <>\n        <thead>\n            <tr>\n            {props.children}\n            </tr>\n        </thead>\n    </>\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { List } from \"../components/List\";\nimport API from \"../utils/API\";\nimport { useUserContext } from \"../utils/userContext\";\nimport { Table, TableHead, TableBody } from \"../components/Table\";\nimport { Modal, Button } from \"react-materialize\";\nimport moment from \"moment\";\n\nfunction Dashboard() {\n  const [user, setUser] = useState([]);\n  const { state } = useUserContext();\n  const [currentTrip, setCurrentTrip] = useState({});\n  const [weather, setWeather] = useState({});\n  const [sched, setSched] = useState({});\n\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  useEffect(() => {\n    loadTrips();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getWeather(location) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${location}&cnt=1&units=imperial&appid=${apiKey}`\n      )\n      .then((res) => res.json())\n      .then(weatherData => {\n        if(weatherData.message === \"city not found\") {\n          return;\n        }\n        setWeather(weatherData);\n      })\n      .catch(err => console.log(err));\n  }\n\n  function sortSched(unsortedSchedule) {\n    let sortedSchedule = unsortedSchedule.sort((a, b) => {\n        return moment(a.activityDate + \", \" + a.startTime).valueOf() - moment(b.activityDate + \", \" + b.startTime).valueOf();\n    });\n    setSched(sortedSchedule);\n}\n\n  function loadTrips() {\n    API.getUser(state.id)\n      .then((res) => {\n        setUser(res.data);\n\n        for (let i = 0; i < res.data.memberOf.length; i++) {\n          let startDate = res.data.memberOf[i].startDate;\n          let endDate = res.data.memberOf[i].endDate;\n          let tripStart = Date.parse(startDate);\n          let tripEnd = Date.parse(endDate);\n          if (tripStart <= Date.now() && tripEnd >= Date.now()) {\n            setCurrentTrip(res.data.memberOf[i]);\n            getWeather(res.data.memberOf[i].tripCity);\n            sortSched(res.data.memberOf[i].tripSchedule);\n          }\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function removeTrip(id) {\n    API.deleteTrip(id)\n      .then(() => {\n        setCurrentTrip({});\n        loadTrips();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <>\n      <Container>\n        <Card>\n          <Jumbotron>\n            <h5>\n              Welcome {state?.firstName} {state?.lastName}!\n            </h5>\n          </Jumbotron>\n        </Card>\n        {JSON.stringify(currentTrip) !== \"{}\" ? (\n        <Card>\n        {JSON.stringify(weather) !== \"{}\" ? (\n          // <Card>\n            <Row>\n              <Col size=\"m12\">\n                <h5>It looks like you're currently on a trip to {currentTrip.tripCity}!</h5>\n                <br></br>\n                <Link to={\"/trips/\" + currentTrip._id} className=\"roundedbtn btn-small white-text trip-details\">Trip Details</Link>\n\n                <h4>Current weather in {currentTrip.tripCity}:</h4>\n                <Card>\n                  <Row>\n                    <Col size=\"m4 s12\">\n                      <img src={`https://openweathermap.org/img/w/${weather.weather[0].icon}.png`} alt=\"weather status icon\"></img>\n                      <p>{weather.weather[0].description}</p>\n                    </Col>\n                    <Col size=\"m8 s12\">\n                      <br></br>\n                      <p>Temperature: {weather.main.temp.toFixed(0)}°F</p>\n                      <p>Feels Like: {weather.main.feels_like.toFixed(0)}°F</p>\n                      <p>Humidity: {weather.main.humidity}%</p>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            </Row>\n          // </Card>\n        ) : (\n          <p>No weather data found for your city input. :(</p>\n          )}\n        {currentTrip.tripSchedule.length ? (\n          // <Card>\n            <Row>\n              <Col size=\"m12\">\n                <h4>{currentTrip.tripName} Schedule:</h4>\n                {/* <Link to={\"/trips/\" + currentTrip._id}>Go to Dashboard to add an activity</Link> */}\n\n                <Table>\n                  <TableHead>\n                    <th>Date</th>\n                    <th>Activity</th>\n                    <th>Time</th>\n                  </TableHead>\n                  <TableBody>\n                    {currentTrip.tripSchedule.map((schedule, index) => (\n                      <tr key={index}>\n                        <td>{schedule.activityDate}</td>\n                        <td>{schedule.activityName}</td>\n                        <td>{schedule.startTime}</td>\n                      </tr>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Col>\n            </Row>\n          // </Card>\n        ) : (\n          <p>Add something to your trip schedule to see it here!</p>\n          )}\n          </Card>\n        ) : (\n          \"\"\n        )}\n        <Card>\n          <Row>\n            <Col size=\"m12 s12\">\n              <h2>My Trips</h2>\n              <Link to=\"/createtrip\" className=\"roundedbtn btn-small white-text\">+ Add a trip</Link>\n              {user.memberOf ? (\n                <List>\n                  {user.memberOf.map((trip, index) => (\n                    <Card key={index}>\n                      <Link to={\"/trips/\" + trip._id}>\n                        <h4 className=\"trip-name\">{trip.tripName}</h4>\n                      \n                      <p>\n                        {trip.startDate} to {trip.endDate}\n                      </p>\n                      <p>Trip ID: {trip.tripId}</p>\n                      <br></br>\n                      <Button className=\"roundedbtn go-to\">Trip Details</Button>\n                      </Link>\n                      <Modal\n              actions={[\n                <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                  Cancel\n                </Button>,\n                <Button className=\"modal-close delete-confirm\" onClick={() => removeTrip(trip._id)}>Delete Trip</Button>\n              ]}\n              bottomSheet={false}\n              fixedFooter={false}\n              header=\"Are you sure? This will delete all trip data for all trip members!\"\n              id=\"Modal-0\"\n              open={false}\n              options={{\n                // container: \"body\",\n                dismissible: true,\n                endingTop: \"10%\",\n                inDuration: 250,\n                opacity: 0.5,\n                outDuration: 250,\n                preventScrolling: true,\n                startingTop: \"4%\",\n              }}\n              trigger={<DeleteBtn />}\n            ></Modal>\n\n                    </Card>\n                  ))}\n                </List>\n              ) : (\n                <h3>No Results to Display</h3>\n                \n              )}\n              \n            </Col>\n          </Row>\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\n// import moment from \"moment\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"30\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button\n      {...props}\n      style={{ float: \"right\", marginBottom: 10 }}\n      className=\"btn-small roundedbtn link-btn\"\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useUserContext } from \"../../utils/userContext\";\nimport Card from \"../Card\";\nimport { Row, Col } from \"../Grid\";\nimport { Input, TextArea } from \"../Form\";\nimport { Table, TableHead, TableBody } from \"../Table\";\nimport API from \"../../utils/API\";\nimport { Modal, Button, Collapsible, CollapsibleItem } from \"react-materialize\";\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction Collections() {\n  const [collection, setCollection] = useState({});\n  const [formObject, setFormObject] = useState({});\n  const { state } = useUserContext();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    loadTrip();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function loadTrip() {\n    API.getTrip(id)\n      .then((res) => {\n        setCollection(res.data.tripCollections);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function removeCategory(categoryId) {\n    API.deleteCollection(categoryId)\n      .then((res) => {\n        loadTrip();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.collectionName) {\n      API.createCollection(id, {\n        collectionName: formObject.collectionName,\n        collectionDescription: formObject.collectionDescription,\n      })\n        .then((res) => {\n          loadTrip();\n          handleFormClear();\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  const handleItemEntry = (collectionId) => {\n    // event.preventDefault();\n    if (formObject.itemName) {\n      API.createCollectionItem(collectionId, {\n        itemName: formObject.itemName,\n        itemUrl: formObject.itemUrl,\n        itemDescription: formObject.itemDescription,\n        itemSubmitter: state.firstName,\n      })\n        .then((res) => {\n          loadTrip();\n          handleFormClear();\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  function handleFormClear() {\n\n    document.getElementById(\"add-collection-form\").reset();\n\n    setFormObject({\n      collectionName: \"\",\n      collectionDescription: \"\",\n      itemName: \"\",\n      itemUrl: \"\",\n      itemDescription: \"\"\n    });\n  };\n\n  return (\n    <>\n      <Card>\n        <Row>\n          <Col size=\"m12 s12\">\n            <h1>Idea Board</h1>\n            <br></br>\n            <Modal\n              actions={[\n                <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                  Close\n                </Button>,\n                <Button className=\"modal-close roundedbtn\" onClick={handleFormSubmit}>Add</Button>\n              ]}\n              bottomSheet={false}\n              fixedFooter={false}\n              header=\"Add a Category\"\n              id=\"Modal-0\"\n              open={false}\n              options={{\n                // container: \"body\",\n                dismissible: true,\n                endingTop: \"10%\",\n                inDuration: 250,\n                opacity: 0.5,\n                outDuration: 250,\n                preventScrolling: true,\n                startingTop: \"4%\",\n              }}\n              trigger={<Link to=\"\" node=\"button\" className=\"roundedbtn btn-small white-text link-btn\">+ Add a Category</Link>}\n            >\n              <form id=\"add-collection-form\">\n                <Input\n                  onChange={handleInputChange}\n                  name=\"collectionName\"\n                  placeholder=\"Name of the Category, i.e. Restaurants or Hotels\"\n                />\n                <TextArea\n                  onChange={handleInputChange}\n                  name=\"collectionDescription\"\n                  placeholder=\"(Optional) Add any necessary details here\"\n                />\n\n              </form>\n            </Modal>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"m12 s12\">\n            {collection.length ? (\n              <Collapsible accordion={false}>\n                {collection.map((collect, index) => (\n                  <CollapsibleItem\n                    key={index}\n                    expanded={false}\n                    header={collect.collectionName}\n\n                    node=\"div\"\n                  >\n                    {collect.collectionDescription}\n\n                    <br></br>\n                    <br></br>\n                    <Modal\n                      actions={[\n                        <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                          Close\n                        </Button>,\n                        <Button className=\"modal-close roundedbtn\" onClick={() => handleItemEntry(collect._id)}>\n                          Add\n                      </Button>\n                      ]}\n                      bottomSheet={false}\n                      fixedFooter={false}\n                      header=\"Add an Item\"\n                      id=\"collectionItem\"\n                      className=\"modal\"\n                      open={false}\n                      options={{\n                        container: \"body\",\n                        dismissible: true,\n                        endingTop: \"10%\",\n                        inDuration: 250,\n                        opacity: 0.5,\n                        outDuration: 250,\n                        preventScrolling: true,\n                        startingTop: \"4%\",\n                      }}\n                      trigger={\n                        <Link node=\"button\" className=\"btn-small roundedbtn white-text link-btn\">\n                          + Add an Item\n                        </Link>\n                      }\n                    >\n\n                      {/* <form> */}\n                      <Input\n                        onChange={handleInputChange}\n                        name=\"itemName\"\n                        value={formObject.itemName}\n                        placeholder=\"Item Name\"\n                      />\n                      <Input\n                        onChange={handleInputChange}\n                        name=\"itemUrl\"\n                        value={formObject.itemUrl}\n                        placeholder=\"(Optional) Enter a link\"\n                      />\n                      <TextArea\n                        onChange={handleInputChange}\n                        name=\"itemDescription\"\n                        value={formObject.itemDescription}\n                        placeholder=\"(Optional) Add a description\"\n                      ></TextArea>\n\n                      {/* </form> */}\n                    </Modal>\n                    <br /><br />\n                    {collect.collectionItems.length ? (\n                      <Table>\n                        <TableHead>\n                          <th>Idea</th>\n                          <th>Link</th>\n                          <th>By</th>\n                        </TableHead>\n                        <TableBody>\n                          {collect.collectionItems.map((item, index) => (\n                            <tr key={index}>\n                              <Modal\n                                actions={[\n                                  <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                                    Close\n                              </Button>,\n                                ]}\n                                bottomSheet={false}\n                                fixedFooter={false}\n                                header={item.itemName}\n                                id=\"itemDescription\"\n                                className=\"modal\"\n                                open={false}\n                                options={{\n                                  container: \"body\",\n                                  dismissible: true,\n                                  endingTop: \"10%\",\n                                  inDuration: 250,\n                                  opacity: 0.5,\n                                  outDuration: 250,\n                                  preventScrolling: true,\n                                  startingTop: \"4%\",\n                                }}\n                                trigger={\n                                  \n                                  <td className=\"pointer\">{item.itemName}</td>\n                                }\n                                >{item.itemDescription}\n                              </Modal>\n\n                              <td>\n                                <a href={item.itemUrl} target=\"_blank\" rel=\"noreferrer\">\n                                  <i class=\"material-icons\">link</i>\n                                </a>\n                              </td>\n                              <td>{item.itemSubmitter}</td>\n                            </tr>\n                          ))}\n                        </TableBody>\n\n                      </Table>\n                    ) : (\n                      <p>Share some ideas to get started!</p>\n                    )}\n                    <br></br>\n                    <Link onClick={(() => removeCategory(collect._id))} className=\"transparentBG btn-flat red-text\">Delete Category</Link>\n                  </CollapsibleItem>\n                ))}\n              </Collapsible>\n            ) : (\n              <p>No idea categories started yet!</p>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n}\n\nexport default Collections;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport { Input } from \"../components/Form\";\nimport { Row, Col } from \"../components/Grid\";\nimport { Table, TableHead, TableBody } from \"../components/Table\";\nimport API from \"../utils/API\";\nimport { useUserContext } from \"../utils/userContext\";\nimport { Modal, Button, DatePicker } from \"react-materialize\";\nimport DeleteButton from \"../components/DeleteBtn\";\n\nfunction Expenses() {\n    const [tripExpense, setTripExpense] = useState({});\n    const [formObject, setFormObject] = useState({});\n    const { state } = useUserContext();\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        loadTrip();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [id]);\n\n    function loadTrip() {\n        API.getTrip(id)\n            .then((res) => {\n                setTripExpense(res.data.tripExpenses);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function removeExpense(expenseId) {\n        API.deleteExpense(expenseId)\n            .then((res) => {\n                loadTrip();\n            })\n            .catch(err => console.log(err));\n    }\n\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormObject({ ...formObject, [name]: value });\n    }\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n        if (formObject.expenseAmount) {\n            API.createExpense(id, {\n                expenseDescription: formObject.expenseDescription,\n                expenseAmount: formObject.expenseAmount,\n                expenseSubmitter: state.firstName,\n                expenseDate: document.getElementById(\"expenseDate\").value,\n            })\n                .then((res) => {\n                    loadTrip();\n                    handleFormClear();\n\n                })\n                .catch((err) => console.log(err));\n        }\n    };\n\n    function handleFormClear() {\n\n        document.getElementById(\"add-expense-form\").reset();\n\n        setFormObject({\n            expenseDescription: \"\",\n            expenseAmount: \"\"\n        });\n    };\n\n    return (\n        <>\n            <Card>\n                <Row>\n                    <Col size=\"m12 s12\">\n                        <h1>Expenses</h1>\n                        <br></br>\n                        <Modal\n                            actions={[\n                                <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                                    Close\n                                </Button>,\n                                <Button onClick={handleFormSubmit} className=\"modal-close roundedbtn\">Add</Button>\n\n                            ]}\n                            bottomSheet={false}\n                            fixedFooter={false}\n                            header=\"Add an Expense\"\n                            id=\"Modal-0\"\n                            className=\"modal\"\n                            open={false}\n                            options={{\n                                autoclose: true,\n                                container: \"body\",\n                                dismissible: true,\n                                endingTop: \"10%\",\n                                inDuration: 250,\n                                opacity: 0.5,\n                                outDuration: 250,\n                                preventScrolling: true,\n                                startingTop: \"4%\",\n                            }}\n                            trigger={<Link node=\"button\" className=\"btn-small roundedbtn white-text link-btn\">+ Add an Expense</Link>}\n                        >\n                            <form id=\"add-expense-form\">\n                                <Input\n                                    onChange={handleInputChange}\n                                    name=\"expenseDescription\"\n                                    placeholder=\"Brief description of the expense\"\n                                />\n                                <Input\n                                    onChange={handleInputChange}\n                                    name=\"expenseAmount\"\n                                    type=\"number\"\n                                    placeholder=\"Enter dollar amount here\"\n                                />\n                                <DatePicker\n                                    id=\"expenseDate\"\n                                    name=\"expenseDate\"\n                                    placeholder=\"When did you make the purchase?\"\n                                    options={{\n                                        autoClose: true,\n                                        container: \"body\",\n                                    }}\n                                />\n                            </form>\n                        </Modal>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"m12 s12\">\n                        {tripExpense.length ? (\n                            <Table>\n                                <TableHead>\n                                    <th>By</th>\n                                    <th>Entry</th>\n                                    <th>Cost</th>\n                                    <th>Date</th>\n                                </TableHead>\n                                <TableBody>\n                                    {tripExpense.map((expense, index) => (\n                                        <tr key={index}>\n                                            <td>{expense.expenseSubmitter}</td>\n                                            <td>{expense.expenseDescription}</td>\n                                            <td>${expense.expenseAmount}</td>\n                                            <td>{expense.expenseDate}</td>\n                                            {/* <td><compModal header=\"Edit Expense\" onChange={handleInputChange} onClick={handleFormSubmit} trigger={<EditButton onClick={(() => editExpense(expense._id))} />} /></td> */}\n                                            <td><DeleteButton onClick={(() => removeExpense(expense._id))} /></td>\n                                        </tr>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        ) : (\n                            <p>No expenses logged yet!</p>\n                        )}\n                    </Col>\n                </Row>\n            </Card>\n        </>\n    );\n}\nexport default Expenses;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport { Row, Col } from \"../components/Grid\";\nimport { Input, TextArea } from \"../components/Form\";\nimport { Table, TableHead, TableBody } from \"../components/Table\";\nimport API from \"../utils/API\";\nimport { useUserContext } from \"../utils/userContext\";\nimport { Modal, Button, DatePicker, TimePicker } from \"react-materialize\";\nimport moment from \"moment\";\nimport DeleteButton from \"../components/DeleteBtn\";\n\nfunction Schedule() {\n\n    const [sched, setSched] = useState({});\n    const { state } = useUserContext();\n    const [formObject, setFormObject] = useState({});\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        loadTrip();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [id])\n\n    function loadTrip() {\n        API.getTrip(id)\n            .then(res => {\n                sortSched(res.data.tripSchedule);\n            })\n            .catch(err => console.log(err));\n    }\n\n    function sortSched(unsortedSchedule) {\n        let sortedSchedule = unsortedSchedule.sort((a, b) => {\n            return moment(a.activityDate + \", \" + a.startTime).valueOf() - moment(b.activityDate + \", \" + b.startTime).valueOf();\n        });\n        setSched(sortedSchedule);\n    }\n\n    function removeSchedule(scheduleId) {\n        API.deleteSchedule(scheduleId)\n            .then((res) => {\n                loadTrip();\n            })\n            .catch(err => console.log(err));\n    }\n\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormObject({ ...formObject, [name]: value })\n    };\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n\n        if (formObject.activityName) {\n            API.createSchedule(id, {\n                activityName: formObject.activityName,\n                activityDate: document.getElementById(\"activityDate\").value,\n                activitySubmitter: state.firstName,\n                startTime: document.getElementById(\"startTime\").value,\n                endTime: document.getElementById(\"endTime\").value,\n                activityDescription: formObject.activityDescription\n            })\n                .then((res) => {\n                    loadTrip();\n                    handleFormClear();\n                }\n                )\n                // .then(res => findAllTrips())\n                .catch(err => console.log(err));\n        }\n    };\n\n    function handleFormClear() {\n\n        document.getElementById(\"addScheduleForm\").reset();\n\n        setFormObject({\n            activityName: \"\",\n            activityDescription: \"\"\n        });\n    };\n\n    return (\n        <>\n            <Card>\n                <Row>\n                    <Col size=\"m12 s12\">\n                        <h1>Schedule</h1>\n                        <br></br>\n                        <Modal\n                            actions={[\n                                <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                                    Close\n                                </Button>,\n                                <Button\n                                    onClick={handleFormSubmit}\n                                    className=\"modal-close roundedbtn\"\n                                >Add</Button>\n                            ]}\n                            bottomSheet={false}\n                            fixedFooter={false}\n                            header=\"Add an Activity\"\n                            id=\"add-activity-modal\"\n                            className=\"modal\"\n                            open={false}\n                            options={{\n                                autoclose: true,\n                                container: \"body\",\n                                dismissible: true,\n                                endingTop: \"10%\",\n                                inDuration: 250,\n                                opacity: 0.5,\n                                outDuration: 250,\n                                preventScrolling: true,\n                                startingTop: \"4%\",\n                            }}\n                            trigger={<Link node=\"button\" className=\"btn-small roundedbtn white-text link-btn\">+ Add an Activity</Link>}\n                        >\n                            <form id=\"addScheduleForm\">\n                                <Input\n                                    onChange={handleInputChange}\n                                    name=\"activityName\"\n                                    value={formObject.activityName}\n                                    placeholder=\"What are you doing?\"\n                                />\n                                <DatePicker\n                                    id=\"activityDate\"\n                                    name=\"activityDate\"\n                                    value={formObject.activityDate}\n                                    placeholder=\"Date\"\n                                    options={{\n                                        container: \"body\",\n                                        autoClose: true\n                                    }}\n                                />\n                                <TimePicker\n                                    id=\"startTime\"\n                                    name=\"startTime\"\n                                    value={formObject.startTime}\n                                    placeholder=\"Start Time\"\n                                    options={{\n                                        container: \"body\",\n                                        autoClose: true\n                                    }}\n                                />\n                                <TimePicker\n                                    id=\"endTime\"\n                                    name=\"endTime\"\n                                    value={formObject.endTime}\n                                    placeholder=\"End Time\"\n                                    options={{\n                                        container: \"body\",\n                                        autoClose: true\n                                    }}\n                                />\n                                <TextArea\n                                    onChange={handleInputChange}\n                                    name=\"activityDescription\"\n                                    value={formObject.activityDescription}\n                                    placeholder=\"(Optional) Add any necessary details about the activity here\"\n                                />\n\n                            </form>\n                        </Modal>\n                        <br /><br />\n                        {sched.length ? (\n                            <Table >\n                                <TableHead>\n                                    <th>Date</th>\n                                    <th>Activity</th>\n                                    <th>Time</th>\n                                </TableHead>\n                                <TableBody>\n                                    {sched.map((schedule, index) => (\n                                        <tr key={index}>\n                                            <td>{schedule.activityDate}</td>\n                                            <Modal\n                                                actions={[\n                                                    <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                                                        Close\n                                                    </Button>,\n                                                ]}\n                                                bottomSheet={false}\n                                                fixedFooter={false}\n                                                header={schedule.activityName}\n                                                id=\"scheduleDescription\"\n                                                className=\"modal\"\n                                                open={false}\n                                                options={{\n                                                    container: \"body\",\n                                                    dismissible: true,\n                                                    endingTop: \"10%\",\n                                                    inDuration: 250,\n                                                    opacity: 0.5,\n                                                    outDuration: 250,\n                                                    preventScrolling: true,\n                                                    startingTop: \"4%\",\n                                                }}\n                                                trigger={\n\n                                                    <td className=\"pointer\">{schedule.activityName}</td>\n                                                }\n                                            >{schedule.activityDescription}\n                                            </Modal>\n                                            <td>{schedule.startTime}</td>\n                                            <td><DeleteButton onClick={(() => removeSchedule(schedule._id))} /></td>\n                                        </tr>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        ) : (\n                            <p>Nothing scheduled yet!</p>\n                        )}\n                    </Col>\n                </Row>\n            </Card>\n        </>\n    )\n}\n\nexport default Schedule","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea } from \"../components/Form\";\nimport { Modal, Button, DatePicker } from \"react-materialize\";\n\nimport Card from \"../components/Card\";\nimport { Collection, CollectionItem } from \"react-materialize\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport Collections from \"../components/Collections\";\nimport Expenses from \"./Expenses\";\nimport Schedule from \"./Schedule\";\n\n\nfunction Trip() {\n    const [trip, setTrip] = useState({ members: [] });\n    const [formObject, setFormObject] = useState({\n\n    });\n    const [success, setSuccess] = useState(true);\n    const [fail, setFail] = useState(true);\n    // const [friendUsername, setFriendUsername] = useState(\"\");\n    // const [friendData, setFriendData] = useState({});\n\n    // When this component mounts, grab the trip with the _id of props.match.params.id\n    // e.g. localhost:3000/trips/599dcb67f0f16317844583fc\n    const { id } = useParams();\n\n    useEffect(() => {\n        loadTrip()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function loadTrip() {\n        API.getTrip(id)\n            .then((res) => {\n                setTrip(res.data);\n            })\n            .catch((err) => console.log(err));\n    }\n\n\n    // function handleInputChange(e) {\n    //     const username = e.target.value;\n\n    //     setFriendUsername(username);\n    // }\n\n    // function handleSubmit(e) {\n    //     e.preventDefault();\n\n    //     API.getUserByUsername(friendUsername)\n    //         .then((res) => {\n    //             setFriendData(res.data);\n\n    //             if (trip.members.some((e) => e.userName === friendUsername)) {\n    //                 return;\n    //             }\n    //             console.log(friendData);\n    //             API.updateTrip(id, {\n    //                 members: [\n    //                     ...trip.members,\n    //                     {\n    //                         userName: friendData.userName,\n    //                         name: {\n    //                             firstName: friendData.name.firstName,\n    //                             lastName: friendData.name.lastName,\n    //                         },\n    //                     },\n    //                 ],\n    //             })\n    //                 .then((res) => setTrip(res.data))\n    //                 .catch((err) => console.log(err));\n    //         })\n    //         .catch((err) => console.log(err));\n    // }\n\n    function editTrip() {\n        console.log(trip._id, {\n            tripName: formObject.tripName,\n            tripCity: formObject.tripCity,\n            startDate: document.getElementById(\"startDate\").value,\n            endDate: document.getElementById(\"endDate\").value,\n            description: formObject.description,\n        }, \"id test\")\n        API.editTrip(trip._id, {\n            tripName: formObject.tripName,\n            tripCity: formObject.tripCity,\n            startDate: document.getElementById(\"startDate\").value,\n            endDate: document.getElementById(\"endDate\").value,\n            description: formObject.description,\n        })\n            .then((res) => {\n                loadTrip();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleEditInput(event) {\n        const { name, value } = event.target;\n        setFormObject({ ...formObject, [name]: value });\n    }\n\n    return (\n        <Container fluid>\n            <Card>\n                <Row>\n                    <Col size=\"m12 s12\">\n                        {/* <Jumbotron> */}\n                        <h3 className=\"float-left\">{trip.tripName}   </h3>\n                        {/* </Jumbotron> */}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"m12\">\n                        <p>\n                            {trip.startDate} to {trip.endDate}\n                        </p>\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col size=\"m12\">\n                        <p>{trip.description}</p>\n                    </Col>\n                </Row>\n                    <Col size=\"m12\">\n                        <Modal\n                            actions={[\n                                <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                                    Cancel\n                </Button>,\n                                <Button className=\"modal-close roundedbtn\" onClick={() => editTrip(trip._id)}>Save Trip</Button>\n                            ]}\n                            bottomSheet={false}\n                            fixedFooter={false}\n                            header=\"Edit Trip\"\n                            id=\"Modal-0\"\n                            open={false}\n                            options={{\n                                // container: \"body\",\n                                dismissible: true,\n                                endingTop: \"10%\",\n                                inDuration: 250,\n                                opacity: 0.5,\n                                outDuration: 250,\n                                preventScrolling: true,\n                                startingTop: \"4%\",\n                            }}\n                            trigger={\n                                <div className=\"edit-btn pointer\" role=\"button\">\n                                    <i className=\"material-icons\">edit</i>\n                                </div>\n                            }\n                        >\n                            <form>\n                                <h5>Trip Name</h5>\n                                <Input\n                                    onChange={handleEditInput}\n                                    name=\"tripName\"\n                                    value={formObject.tripName ? formObject.tripName : trip.tripName}\n                                    placeholder=\"Give your trip a name!\"\n\n                                />\n                                <h5>City</h5>\n                                <span>Enter a city name to get live weather data while on your trip!</span>\n                                <Input\n                                    onChange={handleEditInput}\n                                    name=\"tripCity\"\n                                    value={formObject.tripCity ? formObject.tripCity : trip.tripCity}\n                                    placeholder=\"City Name\"\n\n                                />\n                                <Input\n                                    onChange={handleEditInput}\n                                    name=\"tripState\"\n                                    value={formObject.tripState ? formObject.tripState : trip.tripState}\n                                    placeholder=\"State and/or country\"\n\n                                />\n                                <h5>Trip Dates</h5>\n                                <DatePicker\n                                    id=\"startDate\"\n                                    name=\"startDate\"\n                                    value={formObject.startDate ? formObject.startDate : trip.startDate}\n                                    placeholder=\"Start Date\"\n\n                                    options={{\n                                        container: \"body\",\n                                        autoClose: true\n                                    }}\n                                />\n                                <DatePicker\n                                    id=\"endDate\"\n                                    name=\"endDate\"\n                                    value={formObject.endDate ? formObject.endDate : trip.endDate}\n                                    placeholder=\"End Date\"\n\n                                    options={{\n                                        container: \"body\",\n                                        autoClose: true\n                                    }}\n                                />\n                                <TextArea\n                                    onChange={handleEditInput}\n                                    name=\"description\"\n                                    value={formObject.description ? formObject.description : trip.description}\n                                    placeholder=\"(Optional) What kind of trip is this, what are your hopes and dreams? Are you looking to accomplish anything specific?\"\n\n                                />\n                                {!success && <div> Whoops! Please try again.</div>}\n                                {!fail && <div> Success! Your trip was created.</div>}\n                            </form>\n                        </Modal>\n                    </Col>\n            </Card>\n            <Card>\n                <Row>\n                    <Col size=\"m12 s12\">\n                        <article>\n                            <h2>Trip Members</h2>\n                            <br></br>\n                            {trip.members.length ? (\n                                <Collection>\n                                    {trip.members.map((friend, index) => (\n\n                                        <CollectionItem key={index}>\n\n                                            {friend.name.firstName + \" \" + friend.name.lastName}\n                                            <br />\n                                            <span>Username: {friend.userName}</span>\n                                        </CollectionItem>\n                                    ))}\n                                </Collection>\n                            ) : (\n                                \"\"\n                            )}\n                            <br></br>\n                            <h5>Send your friends this unique Trip ID to join:</h5>\n                            <h4>{trip.tripId}</h4>\n                            {/* <br></br>\n                                <h5>OR</h5>\n                                <SearchBar onChange={handleInputChange} />\n                                <SubmitButton onClick={handleSubmit} /> */}\n                        </article>\n                    </Col>\n                </Row>\n            </Card>\n            {/* Other trip components referenced here */}\n            <Collections />\n            <Schedule />\n            <Expenses />\n            <Card>\n                <Row>\n                    <Col size=\"m12 s12\">\n                        <Link to=\"/dashboard\" className=\"btn-small roundedbtn white-text link-btn\">← Back to Dashboard</Link>\n                    </Col>\n                </Row>\n            </Card>\n        </Container>\n    );\n}\n\nexport default Trip;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport { Container } from \"../components/Grid\";\nimport { Input, TextArea } from \"../components/Form\";\nimport API from \"../utils/API\";\nimport { useUserContext } from \"../utils/userContext\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Button, DatePicker } from \"react-materialize\";\n\nfunction CreateTrip() {\n    const [formObject, setFormObject] = useState({});\n    const [success, setSuccess] = useState(true);\n    const [fail, setFail] = useState(true);\n    const { state, dispatch } = useUserContext();\n    const history = useHistory();\n\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormObject({ ...formObject, [name]: value });\n    }\n\n    const randomID = () => {\n        return Math.random().toString(36).substr(2, 9).toUpperCase();\n    };\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n        if (formObject.tripName) {\n            API.saveTrip({\n                id: state.id,\n                tripId: randomID(),\n                tripName: formObject.tripName,\n                tripCity: formObject.tripCity,\n                startDate: document.getElementById(\"startDate\").value,\n                endDate: document.getElementById(\"endDate\").value,\n                description: formObject.description,\n                members: [state.id]\n            })\n                .then(async (res) => {\n                    dispatch({\n                        type: \"update\",\n                        memberOf: res.data.memberOf,\n                    });\n\n                    history.push(\"/dashboard\");\n                })\n                .catch((err) => {\n                    setSuccess(false);\n                    setFail(true);\n                    console.log(err)\n                });\n        }\n    }\n\n    function handleIdSubmit(event) {\n        event.preventDefault();\n        if (formObject.tripId) {\n            API.findTripByTripId(\n                {\n                    tripId: formObject.tripId\n                }\n            )\n                .then((res) => {\n                    API.updateTrip(\n                        res.data._id,\n                        {\n                            members: [...res.data.members, state.id]\n                        }\n                    )\n                        .then(async (res) => {\n                            dispatch({\n                                type: \"update\",\n                                memberOf: res.data.memberOf,\n                            });\n\n                            history.push(\"/dashboard\");\n                        })\n                        .catch((err) => {\n                            setSuccess(false);\n                            setFail(true);\n                            console.log(err);\n                        });\n                })\n                .catch((err) => {\n                    setSuccess(false);\n                    setFail(true);\n                    console.log(err);\n                })\n        }\n    }\n\n    return (\n        <>\n            <Container>\n                <Card>\n                    <Jumbotron>\n                        <h1>Find An Existing Trip</h1>\n                    </Jumbotron>\n                    <form>\n                        <Input\n                            onChange={handleInputChange}\n                            name=\"tripId\"\n                            placeholder=\"Insert 9 Character ID Here\"\n                        />\n                        <Button disabled={!formObject.tripId} onClick={handleIdSubmit} className=\"roundedbtn btn-small white-text bigger-text\">\n                            Add\n                        </Button>\n                    </form>\n                </Card>\n                <Card>\n                    <Jumbotron>\n                        <h1>Create a New Trip</h1>\n                    </Jumbotron>\n                    <form>\n                        <h3>Trip Name</h3>\n                        <Input\n                            onChange={handleInputChange}\n                            name=\"tripName\"\n                            placeholder=\"Give your trip a name!\"\n                        />\n                        <h3>City</h3>\n                        <span>Enter a city name to get live weather data while on your trip!</span>\n                        <Input\n                            onChange={handleInputChange}\n                            name=\"tripCity\"\n                            placeholder=\"City Name\"\n                        />\n                        <Input\n                            onChange={handleInputChange}\n                            name=\"tripState\"\n                            placeholder=\"State and/or country\"\n                        />\n                        <h3>Trip Dates</h3>\n                        <DatePicker\n                            id=\"startDate\"\n                            name=\"startDate\"\n                            placeholder=\"Start Date\"\n                            options={{\n                                container: \"body\",\n                                autoClose: true\n                            }}\n                        />\n                        <DatePicker\n                            id=\"endDate\"\n                            name=\"endDate\"\n                            placeholder=\"End Date\"\n                            options={{\n                                container: \"body\",\n                                autoClose: true\n                            }}\n                        />\n                        <TextArea\n                            onChange={handleInputChange}\n                            name=\"description\"\n                            placeholder=\"(Optional) What kind of trip is this, what are your hopes and dreams? Are you looking to accomplish anything specific?\"\n                        />\n                        <Button disabled={!formObject.tripName} onClick={handleFormSubmit} className=\"roundedbtn btn-small white-text bigger-text\">\n                            Create\n            </Button>\n                        {!success && <div> Whoops! Please try again.</div>}\n                        {!fail && <div> Success! Your trip was created.</div>}\n                    </form>\n                </Card>\n            </Container>\n        </>\n    );\n}\n\nexport default CreateTrip;\n","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport { Link } from \"react-router-dom\";\nimport { useUserContext } from \"../utils/userContext\";\n\nfunction Signup() {\n  const [formObject, setFormObject] = useState({});\n  const [success, setSuccess] = useState(false);\n  const { dispatch } = useUserContext();\n\n  const validated = () => {\n    setSuccess(true);\n    setTimeout(function () {\n      window.location.href = \"/dashboard/\";\n    }, 2000);\n    return () => {\n      clearTimeout();\n    };\n  };\n\n  // useEffect(() => {}, []);\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (\n      formObject.userName &&\n      formObject.firstName &&\n      formObject.lastName &&\n      formObject.password\n    ) {\n      API.saveUser({\n        userName: formObject.userName,\n        name: {\n          firstName: formObject.firstName,\n          lastName: formObject.lastName,\n        },\n        password: formObject.password,\n      })\n        .then((res) => {\n          API.findOneUser({\n            userName: formObject.userName,\n            password: formObject.password,\n          })\n            .then(async (res) => {\n              // setSuccess(true);\n              // setFail(false);\n              dispatch({\n                type: \"add\",\n                id: res.data._id,\n                userName: res.data.userName,\n                firstName: res.data.name.firstName,\n                lastName: res.data.name.lastName,\n                memberOf: res.data.memberOf,\n                isAuthenticated: \"true\",\n              });\n            })\n            .catch((err) => {\n              // setSuccess(false);\n              // setFail(true);\n              console.log(err);\n            });\n\n          validated();\n        }) //add dispatch inside here {type: \"addUser\",payload: formObject}\n        .catch((err) => console.log(err));\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col size=\"l8 offset-l2 s12\">\n          <Card>\n            <Row>\n              <h3>Sign Up for a New Account</h3>\n            </Row>\n            <form>\n              <Input\n                onChange={handleInputChange}\n                name=\"userName\"\n                placeholder=\"Username (required)\"\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"firstName\"\n                placeholder=\"First Name (required)\"\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"lastName\"\n                placeholder=\"Last Name (required)\"\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password (required)\"\n              />\n              <FormBtn\n                disabled={\n                  !(\n                    formObject.userName &&\n                    formObject.firstName &&\n                    formObject.lastName &&\n                    formObject.password\n                  )\n                }\n                onClick={handleFormSubmit}\n              >\n                Submit User\n              </FormBtn>\n              <Link to=\"/login\">Already have an account? Log in here</Link>\n              {success && <div> Success! Redirecting to Dashboard.</div>}\n            </form>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { Col, Row } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport API from \"../utils/API\";\nimport { useUserContext } from \"../utils/userContext\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nfunction Login() {\n  const [formObject, setFormObject] = useState({});\n  const [success, setSuccess] = useState(true);\n  const [fail, setFail] = useState(true);\n  const history = useHistory();\n  const { dispatch } = useUserContext();\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.userName && formObject.password) {\n      API.findOneUser({\n        userName: formObject.userName,\n        password: formObject.password,\n      })\n        .then(async (res) => {\n          setSuccess(true);\n          setFail(false);\n          dispatch({\n            type: \"add\",\n            id: res.data._id,\n            userName: res.data.userName,\n            firstName: res.data.name.firstName,\n            lastName: res.data.name.lastName,\n            memberOf: res.data.memberOf,\n            isAuthenticated: \"true\",\n          });\n          history.push(\"/dashboard\");\n        })\n        .catch((err) => {\n          setSuccess(false);\n          setFail(true);\n          console.log(err);\n        });\n    }\n  }\n\n  return (\n    <>\n      <div className=\"container login-box\">\n        <Row>\n          <Col size=\"m12 s12\">\n            <Card>\n              <Row>\n                <h3>Log Into an Existing Account</h3>\n              </Row>\n              <form>\n                <Input\n                  onChange={handleInputChange}\n                  name=\"userName\"\n                  placeholder=\"Username\"\n                />\n                <Input\n                  onChange={handleInputChange}\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n                <FormBtn\n                  disabled={!(formObject.userName && formObject.password)}\n                  onClick={handleFormSubmit}\n                  className=\"roundedbtn\"\n                >\n                  Log in\n                </FormBtn>\n                <Link to=\"/signup\">Create a new account</Link>\n                {!success && <div> Whoops! Please try again.</div>}\n                {!fail && <div> Success! You are now logged in.</div>}\n              </form>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport API from \"../utils/API\";\n\nfunction Signout() {\n\n  const validated = () => {\n    API.signOut()\n    .then(res => {\n      console.log(\"signout\")\n    });\n    localStorage.clear();\n    setTimeout(function () {\n      window.location.href = \"/\";\n    }, 2000);\n    return () => {\n      clearTimeout();\n    };\n  };\n\n  validated();\n\n  return (\n    <>\n      <Container>\n        <Card>\n          <p>\n            <span>You have been signed out. Redirecting to Home...</span>\n          </p>\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default Signout;\n","import { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport { useUserContext } from \"../../utils/userContext\";\nimport React from \"react\";\nimport navLinks from \"../../utils/navlinks.json\";\nimport \"materialize-css\"\nimport { Navbar } from \"react-materialize\";\n\nfunction Nav() {\n  const { state } = useUserContext();\n\n  return (\n    <>\n      <header>\n        <Navbar className=\"transparentBG no-shadows\"\n        alignLinks=\"right\"\n        brand={<Link to=\"/dashboard\" className=\"brand-logo center\" id=\"brand-logo\">\n        T R V L R\n      </Link>}>\n          <div className=\"navbar-default\">\n            <ul className=\"sidenav-close\">\n              {navLinks.map((link, index) => {\n                if (state.userName && link.logged === \"in\")\n                  return (\n                      <li key={index}>\n                        <Link to={link.linkTo} className=\"btn transparentBG no-shadows\">\n                          {link.linkName}\n                        </Link>\n                      </li>\n                  );\n                else if (!state.userName && link.logged === \"out\")\n                  return (\n                      <li key={index}>\n                        <Link to={link.linkTo} className=\"btn transparentBG no-shadows\">\n                          {link.linkName}\n                        </Link>\n                      </li>\n                  );\n                return \"\";\n              })}\n            </ul>\n          </div>\n        </Navbar>\n      </header>\n    </>\n  );\n}\n\nexport default Nav;\n","import \"./style.css\";\n\nfunction Footer() {\n    return (\n        <>\n            <footer className=\"page-footer\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col l8 s12\">\n                            <h5 className=\"white-text\">Development Team</h5>\n                            <p className=\"grey-text text-lighten-4\">We all got our start at KU's coding bootcamp!</p>\n                        </div>\n                        <div className=\"col l4 s12\">\n                            <h5 className=\"white-text\">Dev Team GitHub</h5>\n                            <ul>\n                                <li><a className=\"white-text\" href=\"https://github.com/verusbabb\">Steve Babb</a></li>\n                                <li><a className=\"white-text\" href=\"https://github.com/koltondecker\">Kolton Decker</a></li>\n                                <li><a className=\"white-text\" href=\"https://github.com/cgouge93\">Carly Gouge</a></li>\n                                <li><a className=\"white-text\" href=\"https://github.com/cmoss703\">Christina Moss</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer-copyright\">\n                    <div class=\"container\">\n                        \n                    </div>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useUserContext } from \"../utils/userContext\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  const { state } = useUserContext();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (state.isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Trip from \"./pages/Trip\";\nimport CreateTrip from \"./pages/CreateTrip\";\nimport Schedule from \"./pages/Schedule\";\nimport Expenses from \"./pages/Expenses\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Signout from \"./pages/Signout\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport { Link } from \"react-router-dom\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { useUserContext } from \"./utils/userContext\";\nimport { ProtectedRoute } from \"./components/protectedRoutes\";\n\nfunction App() {\n  const { state, dispatch } = useUserContext();\n\n  var inactivityTime = function () {\n    var time;\n    window.onload = resetTimer;\n    // DOM Events\n    document.onmousemove = resetTimer;\n    document.onkeydown = resetTimer;\n\n    function logout() {\n      alert(\"You are now logged out.\");\n      dispatch({\n        type: \"logOut\",\n        isAuthenticated: \"false\",\n      });\n      localStorage.removeItem(\"user\");\n      // eslint-disable-next-line no-restricted-globals\n      location.href = \"/login\";\n    }\n\n    function resetTimer() {\n      clearTimeout(time);\n      time = setTimeout(logout, 1200000);\n      // 1000 milliseconds = 1 second\n    }\n  };\n\n  if (state.isAuthenticated) {\n    inactivityTime();\n  }\n\n  return (\n    <Router>\n      {/* <Link to=\"/dashboard\" className=\"brand-logo-mobile center\">\n              T R V L R\n            </Link> */}\n      <Nav />\n      <main className=\"valign-wrapper\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n          <ProtectedRoute exact path=\"/trips/:id\" component={Trip} />\n          <ProtectedRoute exact path=\"/createtrip\" component={CreateTrip} />\n          <ProtectedRoute\n            exact\n            path=\"/trips/:id/schedule\"\n            component={Schedule}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/trips/:id/expenses\"\n            component={Expenses}\n          />\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/signout\">\n            <Signout />\n          </Route>\n        </Switch>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport \"materialize-css\";\nimport { UserProvider } from \"./utils/userContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}